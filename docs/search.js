window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "ballistics", "modulename": "ballistics", "kind": "module", "doc": "<p>This package is written to provide the user with a \"minimalist\" set of tools for\ncalculating and solving interior ballistic problems.</p>\n"}, {"fullname": "ballistics.Significance", "modulename": "ballistics", "qualname": "Significance", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, {"fullname": "ballistics.Significance.IGNITION", "modulename": "ballistics", "qualname": "Significance.IGNITION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Significance.IGNITION: &#x27;ignition&#x27;&gt;"}, {"fullname": "ballistics.Significance.START", "modulename": "ballistics", "qualname": "Significance.START", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Significance.START: &#x27;shot start&#x27;&gt;"}, {"fullname": "ballistics.Significance.PEAK_PRESSURE", "modulename": "ballistics", "qualname": "Significance.PEAK_PRESSURE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Significance.PEAK_PRESSURE: &#x27;max pressure&#x27;&gt;"}, {"fullname": "ballistics.Significance.FRACTURE", "modulename": "ballistics", "qualname": "Significance.FRACTURE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Significance.FRACTURE: &#x27;fracture&#x27;&gt;"}, {"fullname": "ballistics.Significance.BURNOUT", "modulename": "ballistics", "qualname": "Significance.BURNOUT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Significance.BURNOUT: &#x27;burnout&#x27;&gt;"}, {"fullname": "ballistics.Significance.MUZZLE", "modulename": "ballistics", "qualname": "Significance.MUZZLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Significance.MUZZLE: &#x27;muzzle&#x27;&gt;"}, {"fullname": "ballistics.Significance.INTERMEDIATE", "modulename": "ballistics", "qualname": "Significance.INTERMEDIATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Significance.INTERMEDIATE: &#x27;x&#x27;&gt;"}, {"fullname": "ballistics.Significance.STEP", "modulename": "ballistics", "qualname": "Significance.STEP", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Significance.STEP: &#x27;...&#x27;&gt;"}, {"fullname": "ballistics.Significance.BOMB", "modulename": "ballistics", "qualname": "Significance.BOMB", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Significance.BOMB: &#x27;bomb&#x27;&gt;"}, {"fullname": "ballistics.Significance.ADIABAT", "modulename": "ballistics", "qualname": "Significance.ADIABAT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Significance.ADIABAT: &#x27;adiabat&#x27;&gt;"}, {"fullname": "ballistics.MAX_DT", "modulename": "ballistics", "qualname": "MAX_DT", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.01"}, {"fullname": "ballistics.DEFAULT_GUN_START_PRESSURE", "modulename": "ballistics", "qualname": "DEFAULT_GUN_START_PRESSURE", "kind": "variable", "doc": "<p></p>\n", "default_value": "30000000.0"}, {"fullname": "ballistics.DEFAULT_GUN_LOSS_FRACTION", "modulename": "ballistics", "qualname": "DEFAULT_GUN_LOSS_FRACTION", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.05"}, {"fullname": "ballistics.AMBIENT_PRESSURE", "modulename": "ballistics", "qualname": "AMBIENT_PRESSURE", "kind": "variable", "doc": "<p>in Pa. The pressure value used in <code>ballistics.charge.Charge</code> to force a minimum level of combustion\nrate.</p>\n", "default_value": "101325"}, {"fullname": "ballistics.REDUCED_BURN_RATE_INITIAL_GUESS", "modulename": "ballistics", "qualname": "REDUCED_BURN_RATE_INITIAL_GUESS", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.0"}, {"fullname": "ballistics.DEFAULT_ACC", "modulename": "ballistics", "qualname": "DEFAULT_ACC", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.001"}, {"fullname": "ballistics.DEFAULT_STEPS", "modulename": "ballistics", "qualname": "DEFAULT_STEPS", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "10"}, {"fullname": "ballistics.charge", "modulename": "ballistics.charge", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.charge.logger", "modulename": "ballistics.charge", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger ballistics.charge (WARNING)&gt;"}, {"fullname": "ballistics.charge.Propellant", "modulename": "ballistics.charge", "qualname": "Propellant", "kind": "class", "doc": "<p>class that represent propellant before they are cut into gun charges.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>density</strong> (float):\nbulk density of the propellant, in kg/m^3. Reported value is close to\n1600 kg/m^3 for various modern, smokeless/nitrocellulose based propellant.</li>\n<li><strong>force</strong> (float):\npropellant force, or the work done by a kilogram of propellant gas (as\nideal gas), when expanding from its isochoric adiabatic flame temperature\nto absolute zero, in an isentropic manner. Unit in J/kg, or (m/s)^2.</li>\n<li><p><strong>pressure_exponent</strong> (float):\nparameter in the Saint Robert's (Viellie's) burn rate law:</p>\n\n<pre><code>u = a * P^n\n</code></pre>\n\n<p>where:</p>\n\n<ul>\n<li>u: linear burn rate, in m/s</li>\n<li>a: burn rate coefficient, in m s^-1 Pa^-n.\n<ul>\n<li>n: pressure exponent, dimensionless.</li>\n</ul></li>\n<li>P: average chamber pressure, in Pa.\nis used to model the combustion behavior of the propellant.</li>\n</ul></li>\n<li><p><strong>covolume</strong> (float):\nthe co-volume of a propellant, as used in the Nobel-Abel equation of state:</p>\n\n<pre><code>P (v-alpha) = RT\n</code></pre>\n\n<p>where:</p>\n\n<ul>\n<li>P: average pressure in Pa.</li>\n<li>v: specific volume of propellant gas, in m^3/kg.</li>\n<li>alpha: covolume, in m^3/kg.</li>\n<li>R: specific gas constant, in J/(kg-K).</li>\n<li>T: average temprature in K.</li>\n</ul></li>\n<li><strong>adiabatic_index</strong> (float):\nthe (average) heat capacity ratio of the working gas while in-bore.\nAt elevated temperatures and with a mix of species, this parameter typically\nclusters around 1.23-1.25.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>theta</strong> (float):\nadiabatic index - 1.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<ul>\n<li><strong>[English]</strong> Xu, Fu-ming. (2013). On The Definition of Propellant Force.\nDefence Technology. 9. 127-130. 10.1016/j.dt.2013.10.005.</li>\n</ul>\n"}, {"fullname": "ballistics.charge.Propellant.__init__", "modulename": "ballistics.charge", "qualname": "Propellant.__init__", "kind": "function", "doc": "<p>Method generated by attrs for class Propellant.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">burn_rate_coefficient</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">density</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1600</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">pressure_exponent</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.82</span>,</span><span class=\"param\">\t<span class=\"n\">covolume</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">adiabatic_index</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.2</span></span>)</span>"}, {"fullname": "ballistics.charge.Propellant.name", "modulename": "ballistics.charge", "qualname": "Propellant.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ballistics.charge.Propellant.description", "modulename": "ballistics.charge", "qualname": "Propellant.description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ballistics.charge.Propellant.burn_rate_coefficient", "modulename": "ballistics.charge", "qualname": "Propellant.burn_rate_coefficient", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]"}, {"fullname": "ballistics.charge.Propellant.density", "modulename": "ballistics.charge", "qualname": "Propellant.density", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.charge.Propellant.force", "modulename": "ballistics.charge", "qualname": "Propellant.force", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.charge.Propellant.pressure_exponent", "modulename": "ballistics.charge", "qualname": "Propellant.pressure_exponent", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.charge.Propellant.covolume", "modulename": "ballistics.charge", "qualname": "Propellant.covolume", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.charge.Propellant.adiabatic_index", "modulename": "ballistics.charge", "qualname": "Propellant.adiabatic_index", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.charge.Propellant.theta", "modulename": "ballistics.charge", "qualname": "Propellant.theta", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.charge.Propellant.from_csv_file", "modulename": "ballistics.charge", "qualname": "Propellant.from_csv_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Propellant</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.charge.Charge", "modulename": "ballistics.charge", "qualname": "Charge", "kind": "class", "doc": "<p>class that represent particular charge design.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>density, force, pressure_exponent, covolume, adiabatic_index</strong> (float):\nsee documentation for <code>Propellant</code>.</li>\n<li><strong>form_function</strong> (<code>FormFunction</code>):\nform function that describes the shape of charge.</li>\n<li><p><strong>reduced_burnrate</strong> (float, optional):\nthe burn-rate coefficient is factored against the propellant's arch,\nto produce the <code>reduced burn rate</code>, defined as:</p>\n\n<pre><code>a / e\n</code></pre>\n\n<p>where:</p>\n\n<ul>\n<li>a: burn rate coefficient, in m Pa^-n s^-1.\n<ul>\n<li>n: burn rate exponent, dimensionless.</li>\n</ul></li>\n<li>2e: width of the propellant arch.\nIf this is not supplied, this would be calculated from <code>FormFunction.e_1</code>\nand <code>Propellant.burn_rate_coefficient</code>.</li>\n</ul></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: if the reduced burnrate is not supplied, and both the <code>FormFunction.e_1</code>\nand the <code>Propellant.burnrate_coefficient</code> are None.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>Z_k</strong> (float):\ncached value from <code>FormFunction.Z_k</code>.</li>\n<li><strong>theta</strong> (float):\nsee documentation for <code>Propellant</code></li>\n</ul>\n\n<h6 id=\"raises-2\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: if both the <code>Charge.reduced_burnrate</code> and the <code>FormFunction.e_1</code> are None.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<ul>\n<li><strong>[English]</strong> Xu, Fu-ming. (2013). On The Definition of Propellant Force.\nDefence Technology. 9. 127-130. 10.1016/j.dt.2013.10.005.</li>\n</ul>\n", "bases": "Propellant"}, {"fullname": "ballistics.charge.Charge.__init__", "modulename": "ballistics.charge", "qualname": "Charge.__init__", "kind": "function", "doc": "<p>Method generated by attrs for class Charge.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">burn_rate_coefficient</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">density</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1600</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">pressure_exponent</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.82</span>,</span><span class=\"param\">\t<span class=\"n\">covolume</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">adiabatic_index</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.2</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">form_function</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">form_function</span><span class=\"o\">.</span><span class=\"n\">FormFunction</span></span>)</span>"}, {"fullname": "ballistics.charge.Charge.reduced_burnrate", "modulename": "ballistics.charge", "qualname": "Charge.reduced_burnrate", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.charge.Charge.form_function", "modulename": "ballistics.charge", "qualname": "Charge.form_function", "kind": "variable", "doc": "<p></p>\n", "annotation": ": ballistics.form_function.FormFunction"}, {"fullname": "ballistics.charge.Charge.from_propellant", "modulename": "ballistics.charge", "qualname": "Charge.from_propellant", "kind": "function", "doc": "<p>defines a charge with propellant and reduced burn rate.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>reduced_burnrate</strong> (float):\nsee documentation of <code>FormFunction</code> for more information.</li>\n<li><strong>propellant</strong> (<code>Propellant</code>):\nbase propellant of this charge.</li>\n<li><strong>form_function:</strong>: <code>FormFunction</code> object that describes the geometry of this propellant.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>For convenience, functions to estimate the reduced burn rate has been provided, as\n<code>Charge.estimate_reduced_from_coefficient_and_arch</code> and\n<code>Charge.estimate_reduced_from_unitary_and_arch</code>, and their use is strongly encouraged.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrate</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">propellant</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Propellant</span>,</span><span class=\"param\">\t<span class=\"n\">form_function</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">form_function</span><span class=\"o\">.</span><span class=\"n\">FormFunction</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Charge</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.charge.Charge.estimate_reduced_from_arch_and_coefficient", "modulename": "ballistics.charge", "qualname": "Charge.estimate_reduced_from_arch_and_coefficient", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arch_width</strong> (float):\nthe minimum depth the propellant's burn surface must recede to burnthrough.\nSee documentation of <code>FormFunction</code> for more information.</li>\n<li><strong>burn_rate_coefficient</strong> (float):\ncoefficient used in de Saint Robert's burn rate law. See documentation for\n<code>Charge</code> for more information.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Tabulating the propellant's burn rate this way is particularly common with Western sources\nand more recent work from China.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arch_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">burn_rate_coefficient</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.charge.Charge.get_coefficient_from_arch", "modulename": "ballistics.charge", "qualname": "Charge.get_coefficient_from_arch", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arch_width</strong> (float, optional.):\nthe minimum depth the propellant's burn surface must recede to burnthrough.\nSee documentation of <code>FormFunction</code> for more information.\nIf this parameter is not supplied, then the value set for <code>FormFunction.e_1</code> is used.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: if both <code>arch_width</code> and <code>FormFunction.e_1</code> are None.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Tabulating the propellant's burn rate this way is particularly common with Western sources\nand more recent work fromChina.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">arch_width</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.charge.Charge.Z_k", "modulename": "ballistics.charge", "qualname": "Charge.Z_k", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.charge.Charge.psi", "modulename": "ballistics.charge", "qualname": "Charge.psi", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Z</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.charge.Charge.dZdt", "modulename": "ballistics.charge", "qualname": "Charge.dZdt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">P</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.form_function", "modulename": "ballistics.form_function", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.form_function.MultiPerfShape", "modulename": "ballistics.form_function", "qualname": "MultiPerfShape", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, {"fullname": "ballistics.form_function.MultiPerfShape.SEVEN_PERF_CYLINDER", "modulename": "ballistics.form_function", "qualname": "MultiPerfShape.SEVEN_PERF_CYLINDER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MultiPerfShape.SEVEN_PERF_CYLINDER: (&#x27;cylinder&#x27;, 7, 1, 7, 0, (3, 8), (0, 0), 0.2956)&gt;"}, {"fullname": "ballistics.form_function.MultiPerfShape.SEVEN_PERF_ROSETTE", "modulename": "ballistics.form_function", "qualname": "MultiPerfShape.SEVEN_PERF_ROSETTE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MultiPerfShape.SEVEN_PERF_ROSETTE: (&#x27;rosette&#x27;, 7, 2, 8, 6.615946745061505, (1, 4), (1, 2), 0.1547)&gt;"}, {"fullname": "ballistics.form_function.MultiPerfShape.FOURTEEN_PERF_ROSETTE", "modulename": "ballistics.form_function", "qualname": "MultiPerfShape.FOURTEEN_PERF_ROSETTE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MultiPerfShape.FOURTEEN_PERF_ROSETTE: (&#x27;rosette&#x27;, 14, 2.6666666666666665, 15.666666666666666, 14.334551280966593, (1, 4), (1, 2), 0.1547)&gt;"}, {"fullname": "ballistics.form_function.MultiPerfShape.NINETEEN_PERF_ROSETTE", "modulename": "ballistics.form_function", "qualname": "MultiPerfShape.NINETEEN_PERF_ROSETTE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MultiPerfShape.NINETEEN_PERF_ROSETTE: (&#x27;rosette&#x27;, 19, 3, 21, 19.847840235184513, (1, 4), (1, 2), 0.1547)&gt;"}, {"fullname": "ballistics.form_function.MultiPerfShape.NINETEEN_PERF_CYLINDER", "modulename": "ballistics.form_function", "qualname": "MultiPerfShape.NINETEEN_PERF_CYLINDER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MultiPerfShape.NINETEEN_PERF_CYLINDER: (&#x27;cylinder&#x27;, 19, 1, 19, 0, (5, 12), (0, 0), 0.3559)&gt;"}, {"fullname": "ballistics.form_function.MultiPerfShape.NINETEEN_PERF_HEXAGON", "modulename": "ballistics.form_function", "qualname": "MultiPerfShape.NINETEEN_PERF_HEXAGON", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MultiPerfShape.NINETEEN_PERF_HEXAGON: (&#x27;hexagon&#x27;, 19, 5.729577951308232, 19, 24.04218240146854, (1, 2), (1, 2), 0.1864)&gt;"}, {"fullname": "ballistics.form_function.MultiPerfShape.NINETEEN_PERF_ROUNDED_HEXAGON", "modulename": "ballistics.form_function", "qualname": "MultiPerfShape.NINETEEN_PERF_ROUNDED_HEXAGON", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;MultiPerfShape.NINETEEN_PERF_ROUNDED_HEXAGON: (&#x27;rounded hexagon&#x27;, 19, 5.551769441774365, 19, 23.912017538471652, (1, 2), (1, 2), 0.1977)&gt;"}, {"fullname": "ballistics.form_function.MultiPerfShape.describe", "modulename": "ballistics.form_function", "qualname": "MultiPerfShape.describe", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.form_function.FormFunction", "modulename": "ballistics.form_function", "qualname": "FormFunction", "kind": "class", "doc": "<p>form function relates the volumetric burnup-ratio to the linear (depth-wise)\nburnup ratio, usually denoted psi and Z, respectively.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>chi, labda, mu</strong> (float):\ncoefficient of the shape function before propellant fracture, in the form of\na 3rd-order polynomial:</p>\n\n<pre><code>psi(Z) = chi * Z * (1 + labda * Z + mu * Z**2), Z in [0, 1]\n</code></pre>\n\n<p>these are considered exact under ideal parallel combustion assumptions.</p></li>\n<li><strong>Z_k</strong> (float):\ndenotes the end of combustion point as expressed in linear (depth-wise) burnup\nratio. This is always 1.0 except for multiple-perforated grains, where small\n\"slivers\" of grain continue to combust after the propellant has \"fractured\",\nor the web has been totally consumed. In that case, the slivers' combustion\nbehavior is approximated with simple shapes of equivalent volume, and Z_k is\nextended accordingly to greater than unity.</li>\n<li><strong>e_1</strong> (float, optional):\nif a <code>FormFunction</code> object is instantiated with arch width, this variable is\nassigned.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>psi_s</strong> (float):\nthe volumetric burnup at the time of propellant fracture.</li>\n<li><p><strong>chi_s, labda_s</strong> (float):\ncoefficient of the shape function after propellant fracture, in the form of\na 2nd-order polynomial:</p>\n\n<pre><code>psi(Z) = chi_s * Z * (1 + labda * Z), Z in [1, Z_k],\ns.t. psi(1) = psi_s and psi(Z_k) = 1\n</code></pre>\n\n<p>this is an approximate fit to result in the correct volume burnup at fracture\nand burnout points.</p></li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>non_perf(length, width, height)\n    classmethod that generates a form function for non-perforated propellant shapes.\nsingle_perf(arch_width, height)\n    classmethod that generates a form function for single-perforated propellant shapes.\nmulti_perf(arch_width, perforation_diameter, height, n_perforations, shape)\n    classmethod that generates a form function for multiple-perforated propellant shapes.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Form funciton applies not only to propellant geometry described by parameters but\nalso all shapes that are similar. The required parameters are best thought of as\ncharacteristic ratios.</p>\n\n<p>Subscripts are kept in-line with those used by M.E.Serebryakov and in common\ncirculation within Soviet-sphere ballistic community, which was the convention\nin effect for interior balistics works of the 1980s in China. <code>k</code> (likely comes from\n<em>komplett</em>, \"complete, with everything included\" in German) is used to indicate\nthe point of complete combustion, whereas <code>s</code> (for various Germanic word meaning\n\"sliver\" or \"splinter\", <em>schiefer</em> or <em>splitter</em>) denotes values at fracture point.</p>\n\n<h6 id=\"references\">References</h6>\n\n<ul>\n<li><strong>[English]</strong> Mekrassoff, V.A., An Abridged Translation of\nM.E.Serebryakov's \"Interior Ballistics\", originally published in Moscow, 1949,\n<em>Defense Technical Information Center</em>, AD0059622,\n<a href=\"https://apps.dtic.mil/sti/tr/pdf/AD0059622.pdf\">available online</a>.</li>\n<li><strong>[\u4e2d\u6587]</strong> \u5f20\u5c0f\u5175\uff0c\u91d1\u5fd7\u660e\uff082014\uff09\u67aa\u70ae\u5185\u5f39\u9053\u5b66\uff0c\u5317\u4eac\u7406\u5de5\u5927\u5b66\u51fa\u7248\u793e\uff0c\u7b2c\u4e00\u7ae01.3\u5c0f\u8282</li>\n</ul>\n"}, {"fullname": "ballistics.form_function.FormFunction.__init__", "modulename": "ballistics.form_function", "qualname": "FormFunction.__init__", "kind": "function", "doc": "<p>Method generated by attrs for class FormFunction.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">e_1</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">chi</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">labda</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">mu</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">Z_k</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span></span>)</span>"}, {"fullname": "ballistics.form_function.FormFunction.name", "modulename": "ballistics.form_function", "qualname": "FormFunction.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ballistics.form_function.FormFunction.description", "modulename": "ballistics.form_function", "qualname": "FormFunction.description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ballistics.form_function.FormFunction.e_1", "modulename": "ballistics.form_function", "qualname": "FormFunction.e_1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]"}, {"fullname": "ballistics.form_function.FormFunction.chi", "modulename": "ballistics.form_function", "qualname": "FormFunction.chi", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.form_function.FormFunction.labda", "modulename": "ballistics.form_function", "qualname": "FormFunction.labda", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.form_function.FormFunction.mu", "modulename": "ballistics.form_function", "qualname": "FormFunction.mu", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.form_function.FormFunction.Z_k", "modulename": "ballistics.form_function", "qualname": "FormFunction.Z_k", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.form_function.FormFunction.psi_s", "modulename": "ballistics.form_function", "qualname": "FormFunction.psi_s", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.form_function.FormFunction.chi_s", "modulename": "ballistics.form_function", "qualname": "FormFunction.chi_s", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.form_function.FormFunction.labda_s", "modulename": "ballistics.form_function", "qualname": "FormFunction.labda_s", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.form_function.FormFunction.pretty_print", "modulename": "ballistics.form_function", "qualname": "FormFunction.pretty_print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.form_function.FormFunction.non_perf", "modulename": "ballistics.form_function", "qualname": "FormFunction.non_perf", "kind": "function", "doc": "<p>form function that describes:</p>\n\n<ul>\n<li><strong>right square-prism</strong>, commonly described as stick, tape or flake.</li>\n<li><strong>right cylinder</strong>, including those that are elliptic.</li>\n<li><strong>sphere</strong>, including those that are oblonged.\nshaped propellants.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>length, width, height</strong> (float):\nparameters that describes the supplied shape. For each shape, the supplied\nparameters are interpreted as specifying the below. no particular order is\nrequired.</p>\n\n<table>\n<thead>\n<tr>\n  <th>shapes</th>\n  <th>parameters interpretation</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td>right square prism</td>\n  <td>length, width &amp; height</td>\n</tr>\n<tr>\n  <td>right (elliptic) cylinder</td>\n  <td>two axes of the ends &amp; height</td>\n</tr>\n<tr>\n  <td>(oblonged) sphere</td>\n  <td>three axes of an ellipsoid</td>\n</tr>\n</tbody>\n</table></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The only real requirement on the shape being described is that it combusts\nin a self-similar fashion, with the center-of-volume staying constant.\nThe listed shapes <em>should</em> cover most shapes that saw adoption as service\npropellants in the smokeless era.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">length</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">width</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">form_function</span><span class=\"o\">.</span><span class=\"n\">FormFunction</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.form_function.FormFunction.single_perf", "modulename": "ballistics.form_function", "qualname": "FormFunction.single_perf", "kind": "function", "doc": "<p>form function that describes <strong>right hollow cylinder</strong> shaped propellants,\ncolloquially referred to as tubular grains.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arch_width</strong> (float):\nthe width of the arch, or the distance between the inner and outer\nsurface of the cylinder, also the difference between the radius\nof the inner and outer surface.</li>\n<li><strong>height</strong> (float):\nthe length of the propellant, or the distance between the two ends</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">arch_width</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">form_function</span><span class=\"o\">.</span><span class=\"n\">FormFunction</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.form_function.FormFunction.multi_perf", "modulename": "ballistics.form_function", "qualname": "FormFunction.multi_perf", "kind": "function", "doc": "<p>form function that describes multiple perforated propellants of specified shape.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arch_width</strong> (float):\nthe width of the arch, or the distance between the centers of two adjacent\nperforations, substracting the perforation diameter.</li>\n<li><strong>height</strong> (float):\nthe length of the propellant, or the distance between the two ends.</li>\n<li><strong>n_perforations</strong> (int):\nthe number of perforations.</li>\n<li><strong>shape</strong> (<code>MultiPerfShape</code>):\nthe shape of the multi-perforated propellant.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">arch_width</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">perforation_diameter</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">form_function</span><span class=\"o\">.</span><span class=\"n\">MultiPerfShape</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">form_function</span><span class=\"o\">.</span><span class=\"n\">FormFunction</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui", "modulename": "ballistics.gui", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.DEFAULT_PAD", "modulename": "ballistics.gui", "qualname": "DEFAULT_PAD", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, Any]", "default_value": "{&#x27;padx&#x27;: &#x27;2&#x27;, &#x27;pady&#x27;: &#x27;2&#x27;}"}, {"fullname": "ballistics.gui.PROPELLANT_EVENT_TAG", "modulename": "ballistics.gui", "qualname": "PROPELLANT_EVENT_TAG", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;prop_event&#x27;"}, {"fullname": "ballistics.gui.DEFAULT_ENTRY_WIDTH", "modulename": "ballistics.gui", "qualname": "DEFAULT_ENTRY_WIDTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "ballistics.gui.DEFAULT_TEXT_WIDTH", "modulename": "ballistics.gui", "qualname": "DEFAULT_TEXT_WIDTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "40"}, {"fullname": "ballistics.gui.DEFAULT_TEXT_HEIGHT", "modulename": "ballistics.gui", "qualname": "DEFAULT_TEXT_HEIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "ballistics.gui.gun_window", "modulename": "ballistics.gui.gun_window", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.logger", "modulename": "ballistics.gui.gun_window", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger ballistics.gui.gun_window (WARNING)&gt;"}, {"fullname": "ballistics.gui.gun_window.DefineGunWindow", "modulename": "ballistics.gui.gun_window", "qualname": "DefineGunWindow", "kind": "class", "doc": "<p>Toplevel widget, e.g. for dialogs.</p>\n", "bases": "tkinter.Toplevel"}, {"fullname": "ballistics.gui.gun_window.DefineGunWindow.__init__", "modulename": "ballistics.gui.gun_window", "qualname": "DefineGunWindow.__init__", "kind": "function", "doc": "<p>Construct a toplevel widget with the parent MASTER.</p>\n\n<p>Valid resource names: background, bd, bg, borderwidth, class,\ncolormap, container, cursor, height, highlightbackground,\nhighlightcolor, highlightthickness, menu, relief, screen, takefocus,\nuse, visual, width.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parent</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"n\">basis</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">get_props_func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Propellant</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "ballistics.gui.gun_window.DefineGunWindow.parent", "modulename": "ballistics.gui.gun_window", "qualname": "DefineGunWindow.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.DefineGunWindow.value_entries", "modulename": "ballistics.gui.gun_window", "qualname": "DefineGunWindow.value_entries", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.DefineGunWindow.props", "modulename": "ballistics.gui.gun_window", "qualname": "DefineGunWindow.props", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.DefineGunWindow.prop_combo", "modulename": "ballistics.gui.gun_window", "qualname": "DefineGunWindow.prop_combo", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.DefineGunWindow.form_function_frame", "modulename": "ballistics.gui.gun_window", "qualname": "DefineGunWindow.form_function_frame", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.DefineGunWindow.text", "modulename": "ballistics.gui.gun_window", "qualname": "DefineGunWindow.text", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.DefineGunWindow.gun", "modulename": "ballistics.gui.gun_window", "qualname": "DefineGunWindow.gun", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.DefineGunWindow.get_prop", "modulename": "ballistics.gui.gun_window", "qualname": "DefineGunWindow.get_prop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Propellant</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.DefineGunWindow.define_gun", "modulename": "ballistics.gui.gun_window", "qualname": "DefineGunWindow.define_gun", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.GunFrame", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame", "kind": "class", "doc": "<p>Ttk Frame widget is a container, used to group other widgets\ntogether.</p>\n", "bases": "tkinter.ttk.Frame"}, {"fullname": "ballistics.gui.gun_window.GunFrame.__init__", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.__init__", "kind": "function", "doc": "<p>Construct a Ttk Frame with parent master.</p>\n\n<p>STANDARD OPTIONS</p>\n\n<pre><code>class, cursor, style, takefocus\n</code></pre>\n\n<p>WIDGET-SPECIFIC OPTIONS</p>\n\n<pre><code>borderwidth, relief, padding, width, height\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parent</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"n\">get_props_func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Propellant</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">get_acc_func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">get_steps_func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "ballistics.gui.gun_window.GunFrame.parent", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.parent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.GunFrame.get_props_func", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.get_props_func", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.GunFrame.get_acc_func", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.get_acc_func", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.GunFrame.get_steps_func", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.get_steps_func", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.GunFrame.tree", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.tree", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.GunFrame.states_frame", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.states_frame", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.GunFrame.guns", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.guns", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, ballistics.gun.Gun]"}, {"fullname": "ballistics.gui.gun_window.GunFrame.add_overview_frame", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.add_overview_frame", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Labelframe</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.GunFrame.add_derived_frame", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.add_derived_frame", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Labelframe</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.GunFrame.set_overview", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.set_overview", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">gun</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span>,</span><span class=\"param\">\t<span class=\"n\">states</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateList</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.GunFrame.set_states", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.set_states", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">gun</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateList</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.GunFrame.set_overview_and_states", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.set_overview_and_states", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pf</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.GunFrame.add_edit_gun", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.add_edit_gun", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pf</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.GunFrame.save_guns", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.save_guns", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.GunFrame.save_by_family", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.save_by_family", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.GunFrame.load_guns", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.load_guns", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.GunFrame.add_gun", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.add_gun", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">gun</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.GunFrame.del_gun", "modulename": "ballistics.gui.gun_window", "qualname": "GunFrame.del_gun", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pf</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.FormFunctionFrame", "modulename": "ballistics.gui.gun_window", "qualname": "FormFunctionFrame", "kind": "class", "doc": "<p>Ttk Labelframe widget is a container used to group other widgets\ntogether. It has an optional label, which may be a plain text string\nor another widget.</p>\n", "bases": "tkinter.ttk.Labelframe"}, {"fullname": "ballistics.gui.gun_window.FormFunctionFrame.__init__", "modulename": "ballistics.gui.gun_window", "qualname": "FormFunctionFrame.__init__", "kind": "function", "doc": "<p>Construct a Ttk Labelframe with parent master.</p>\n\n<p>STANDARD OPTIONS</p>\n\n<pre><code>class, cursor, style, takefocus\n</code></pre>\n\n<p>WIDGET-SPECIFIC OPTIONS\n    labelanchor, text, underline, padding, labelwidget, width,\n    height</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "ballistics.gui.gun_window.FormFunctionFrame.notebook", "modulename": "ballistics.gui.gun_window", "qualname": "FormFunctionFrame.notebook", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.FormFunctionFrame.prepare_tab", "modulename": "ballistics.gui.gun_window", "qualname": "FormFunctionFrame.prepare_tab", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tab_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Frame</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.FormFunctionFrame.add_non_perf", "modulename": "ballistics.gui.gun_window", "qualname": "FormFunctionFrame.add_non_perf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.FormFunctionFrame.add_single_perf", "modulename": "ballistics.gui.gun_window", "qualname": "FormFunctionFrame.add_single_perf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.FormFunctionFrame.add_multi_perf", "modulename": "ballistics.gui.gun_window", "qualname": "FormFunctionFrame.add_multi_perf", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.FormFunctionFrame.get_form_function", "modulename": "ballistics.gui.gun_window", "qualname": "FormFunctionFrame.get_form_function", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">form_function</span><span class=\"o\">.</span><span class=\"n\">FormFunction</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.FormFunctionFrame.get_shape", "modulename": "ballistics.gui.gun_window", "qualname": "FormFunctionFrame.get_shape", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.StatesFrame", "modulename": "ballistics.gui.gun_window", "qualname": "StatesFrame", "kind": "class", "doc": "<p>Ttk Labelframe widget is a container used to group other widgets\ntogether. It has an optional label, which may be a plain text string\nor another widget.</p>\n", "bases": "tkinter.ttk.Labelframe"}, {"fullname": "ballistics.gui.gun_window.StatesFrame.__init__", "modulename": "ballistics.gui.gun_window", "qualname": "StatesFrame.__init__", "kind": "function", "doc": "<p>Construct a Ttk Labelframe with parent master.</p>\n\n<p>STANDARD OPTIONS</p>\n\n<pre><code>class, cursor, style, takefocus\n</code></pre>\n\n<p>WIDGET-SPECIFIC OPTIONS\n    labelanchor, text, underline, padding, labelwidget, width,\n    height</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "ballistics.gui.gun_window.StatesFrame.tree", "modulename": "ballistics.gui.gun_window", "qualname": "StatesFrame.tree", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.gun_window.StatesFrame.clear", "modulename": "ballistics.gui.gun_window", "qualname": "StatesFrame.clear", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.gun_window.StatesFrame.insert", "modulename": "ballistics.gui.gun_window", "qualname": "StatesFrame.insert", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.main", "modulename": "ballistics.gui.main", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.main.logger", "modulename": "ballistics.gui.main", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger ballistics.gui.main (WARNING)&gt;"}, {"fullname": "ballistics.gui.main.TextHandler", "modulename": "ballistics.gui.main", "qualname": "TextHandler", "kind": "class", "doc": "<p>Handler instances dispatch logging events to specific destinations.</p>\n\n<p>The base handler class. Acts as a placeholder which defines the Handler\ninterface. Handlers can optionally use Formatter instances to format\nrecords as desired. By default, no formatter is specified; in this case,\nthe 'raw' message as determined by record.message is logged.</p>\n", "bases": "logging.Handler"}, {"fullname": "ballistics.gui.main.TextHandler.__init__", "modulename": "ballistics.gui.main", "qualname": "TextHandler.__init__", "kind": "function", "doc": "<p>Initializes the instance - basically setting the formatter to None\nand the filter list to empty.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "ballistics.gui.main.TextHandler.text", "modulename": "ballistics.gui.main", "qualname": "TextHandler.text", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.main.TextHandler.emit", "modulename": "ballistics.gui.main", "qualname": "TextHandler.emit", "kind": "function", "doc": "<p>Do whatever it takes to actually log the specified logging record.</p>\n\n<p>This version is intended to be implemented by subclasses and so\nraises a NotImplementedError.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">record</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.main.DefineParameterFrame", "modulename": "ballistics.gui.main", "qualname": "DefineParameterFrame", "kind": "class", "doc": "<p>Toplevel widget, e.g. for dialogs.</p>\n", "bases": "tkinter.Toplevel"}, {"fullname": "ballistics.gui.main.DefineParameterFrame.__init__", "modulename": "ballistics.gui.main", "qualname": "DefineParameterFrame.__init__", "kind": "function", "doc": "<p>Construct a toplevel widget with the parent MASTER.</p>\n\n<p>Valid resource names: background, bd, bg, borderwidth, class,\ncolormap, container, cursor, height, highlightbackground,\nhighlightcolor, highlightthickness, menu, relief, screen, takefocus,\nuse, visual, width.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parent</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">validator</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">warn</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Set Parameter&#39;</span>,</span><span class=\"param\">\tastype: type = &lt;class &#x27;float&#x27;&gt;,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "ballistics.gui.main.DefineParameterFrame.astype", "modulename": "ballistics.gui.main", "qualname": "DefineParameterFrame.astype", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.main.DefineParameterFrame.warn", "modulename": "ballistics.gui.main", "qualname": "DefineParameterFrame.warn", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.main.DefineParameterFrame.validator", "modulename": "ballistics.gui.main", "qualname": "DefineParameterFrame.validator", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.main.DefineParameterFrame.entry", "modulename": "ballistics.gui.main", "qualname": "DefineParameterFrame.entry", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.main.DefineParameterFrame.val", "modulename": "ballistics.gui.main", "qualname": "DefineParameterFrame.val", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.main.DefineParameterFrame.define_val", "modulename": "ballistics.gui.main", "qualname": "DefineParameterFrame.define_val", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.main.MainFrame", "modulename": "ballistics.gui.main", "qualname": "MainFrame", "kind": "class", "doc": "<p>Ttk Frame widget is a container, used to group other widgets\ntogether.</p>\n", "bases": "tkinter.ttk.Frame"}, {"fullname": "ballistics.gui.main.MainFrame.__init__", "modulename": "ballistics.gui.main", "qualname": "MainFrame.__init__", "kind": "function", "doc": "<p>Construct a Ttk Frame with parent master.</p>\n\n<p>STANDARD OPTIONS</p>\n\n<pre><code>class, cursor, style, takefocus\n</code></pre>\n\n<p>WIDGET-SPECIFIC OPTIONS</p>\n\n<pre><code>borderwidth, relief, padding, width, height\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parent</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "ballistics.gui.main.MainFrame.acc", "modulename": "ballistics.gui.main", "qualname": "MainFrame.acc", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.main.MainFrame.steps", "modulename": "ballistics.gui.main", "qualname": "MainFrame.steps", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.main.MainFrame.config_menu", "modulename": "ballistics.gui.main", "qualname": "MainFrame.config_menu", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.main.MainFrame.set_acc", "modulename": "ballistics.gui.main", "qualname": "MainFrame.set_acc", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.main.MainFrame.set_steps", "modulename": "ballistics.gui.main", "qualname": "MainFrame.set_steps", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.main.main", "modulename": "ballistics.gui.main", "qualname": "main", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.misc", "modulename": "ballistics.gui.misc", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.misc.tree_selected", "modulename": "ballistics.gui.misc", "qualname": "tree_selected", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">treeattr</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;tree&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.misc.add_frame_group", "modulename": "ballistics.gui.misc", "qualname": "add_frame_group", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parent</span>,</span><span class=\"param\">\t<span class=\"n\">values</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">StringVar</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.misc.add_label_entry_label_group", "modulename": "ballistics.gui.misc", "qualname": "add_label_entry_label_group", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">frame</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">ttk</span><span class=\"o\">.</span><span class=\"n\">Frame</span><span class=\"p\">,</span> <span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">Toplevel</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">row</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">label_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">unit_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">entry_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disabled</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">tkinter</span><span class=\"o\">.</span><span class=\"n\">StringVar</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.propellant_window", "modulename": "ballistics.gui.propellant_window", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.propellant_window.logger", "modulename": "ballistics.gui.propellant_window", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger ballistics.gui.propellant_window (WARNING)&gt;"}, {"fullname": "ballistics.gui.propellant_window.DefinePropellantWindow", "modulename": "ballistics.gui.propellant_window", "qualname": "DefinePropellantWindow", "kind": "class", "doc": "<p>Toplevel widget, e.g. for dialogs.</p>\n", "bases": "tkinter.Toplevel"}, {"fullname": "ballistics.gui.propellant_window.DefinePropellantWindow.__init__", "modulename": "ballistics.gui.propellant_window", "qualname": "DefinePropellantWindow.__init__", "kind": "function", "doc": "<p>Construct a toplevel widget with the parent MASTER.</p>\n\n<p>Valid resource names: background, bd, bg, borderwidth, class,\ncolormap, container, cursor, height, highlightbackground,\nhighlightcolor, highlightthickness, menu, relief, screen, takefocus,\nuse, visual, width.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parent</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"n\">basis</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Propellant</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "ballistics.gui.propellant_window.DefinePropellantWindow.value_entries", "modulename": "ballistics.gui.propellant_window", "qualname": "DefinePropellantWindow.value_entries", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.propellant_window.DefinePropellantWindow.text", "modulename": "ballistics.gui.propellant_window", "qualname": "DefinePropellantWindow.text", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.propellant_window.DefinePropellantWindow.prop", "modulename": "ballistics.gui.propellant_window", "qualname": "DefinePropellantWindow.prop", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.propellant_window.DefinePropellantWindow.define_prop", "modulename": "ballistics.gui.propellant_window", "qualname": "DefinePropellantWindow.define_prop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.propellant_window.PropellantFrame", "modulename": "ballistics.gui.propellant_window", "qualname": "PropellantFrame", "kind": "class", "doc": "<p>Ttk Frame widget is a container, used to group other widgets\ntogether.</p>\n", "bases": "tkinter.ttk.Frame"}, {"fullname": "ballistics.gui.propellant_window.PropellantFrame.__init__", "modulename": "ballistics.gui.propellant_window", "qualname": "PropellantFrame.__init__", "kind": "function", "doc": "<p>Construct a Ttk Frame with parent master.</p>\n\n<p>STANDARD OPTIONS</p>\n\n<pre><code>class, cursor, style, takefocus\n</code></pre>\n\n<p>WIDGET-SPECIFIC OPTIONS</p>\n\n<pre><code>borderwidth, relief, padding, width, height\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "ballistics.gui.propellant_window.PropellantFrame.tree", "modulename": "ballistics.gui.propellant_window", "qualname": "PropellantFrame.tree", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.propellant_window.PropellantFrame.overview_text", "modulename": "ballistics.gui.propellant_window", "qualname": "PropellantFrame.overview_text", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.propellant_window.PropellantFrame.props", "modulename": "ballistics.gui.propellant_window", "qualname": "PropellantFrame.props", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.propellant_window.PropellantFrame.set_overview", "modulename": "ballistics.gui.propellant_window", "qualname": "PropellantFrame.set_overview", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pf</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.propellant_window.PropellantFrame.add_prop", "modulename": "ballistics.gui.propellant_window", "qualname": "PropellantFrame.add_prop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">prop</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Propellant</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.propellant_window.PropellantFrame.add_edit_prop", "modulename": "ballistics.gui.propellant_window", "qualname": "PropellantFrame.add_edit_prop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pf</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.propellant_window.PropellantFrame.del_prop", "modulename": "ballistics.gui.propellant_window", "qualname": "PropellantFrame.del_prop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pf</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.propellant_window.PropellantFrame.load_props", "modulename": "ballistics.gui.propellant_window", "qualname": "PropellantFrame.load_props", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.propellant_window.PropellantFrame.get_props", "modulename": "ballistics.gui.propellant_window", "qualname": "PropellantFrame.get_props", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Propellant</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gui.themed_scrolled_text", "modulename": "ballistics.gui.themed_scrolled_text", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.themed_scrolled_text.ThemedScrolledText", "modulename": "ballistics.gui.themed_scrolled_text", "qualname": "ThemedScrolledText", "kind": "class", "doc": "<p>Text widget which can display text in various forms.</p>\n", "bases": "tkinter.Text"}, {"fullname": "ballistics.gui.themed_scrolled_text.ThemedScrolledText.__init__", "modulename": "ballistics.gui.themed_scrolled_text", "qualname": "ThemedScrolledText.__init__", "kind": "function", "doc": "<p>Construct a text widget with the parent MASTER.</p>\n\n<p>STANDARD OPTIONS</p>\n\n<pre><code>background, borderwidth, cursor,\nexportselection, font, foreground,\nhighlightbackground, highlightcolor,\nhighlightthickness, insertbackground,\ninsertborderwidth, insertofftime,\ninsertontime, insertwidth, padx, pady,\nrelief, selectbackground,\nselectborderwidth, selectforeground,\nsetgrid, takefocus,\nxscrollcommand, yscrollcommand,\n</code></pre>\n\n<p>WIDGET-SPECIFIC OPTIONS</p>\n\n<pre><code>autoseparators, height, maxundo,\nspacing1, spacing2, spacing3,\nstate, tabs, undo, width, wrap,\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">master</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kw</span></span>)</span>"}, {"fullname": "ballistics.gui.themed_scrolled_text.ThemedScrolledText.frame", "modulename": "ballistics.gui.themed_scrolled_text", "qualname": "ThemedScrolledText.frame", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gui.themed_scrolled_text.ThemedScrolledText.vbar", "modulename": "ballistics.gui.themed_scrolled_text", "qualname": "ThemedScrolledText.vbar", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gun", "modulename": "ballistics.gun", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.gun.logger", "modulename": "ballistics.gun", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger ballistics.gun (WARNING)&gt;"}, {"fullname": "ballistics.gun.Gun", "modulename": "ballistics.gun", "qualname": "Gun", "kind": "class", "doc": "<p>Class that tracks physical properties of the bore (i.e. that are charge-invariant)\nand manages propellant charge.</p>\n"}, {"fullname": "ballistics.gun.Gun.__init__", "modulename": "ballistics.gun", "qualname": "Gun.__init__", "kind": "function", "doc": "<p>Method generated by attrs for class Gun.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">NOTHING</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">NOTHING</span>,</span><span class=\"param\">\t<span class=\"n\">family</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">NOTHING</span>,</span><span class=\"param\">\t<span class=\"n\">cross_section</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">shot_mass</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">charge</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Charge</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">charges</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Charge</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Charge</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">charge_mass</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">charge_masses</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">chamber_volume</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">loss_fraction</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">start_pressure</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">30000000.0</span>,</span><span class=\"param\">\t<span class=\"n\">travel</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span>)</span>"}, {"fullname": "ballistics.gun.Gun.name", "modulename": "ballistics.gun", "qualname": "Gun.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ballistics.gun.Gun.description", "modulename": "ballistics.gun", "qualname": "Gun.description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ballistics.gun.Gun.family", "modulename": "ballistics.gun", "qualname": "Gun.family", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ballistics.gun.Gun.cross_section", "modulename": "ballistics.gun", "qualname": "Gun.cross_section", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.shot_mass", "modulename": "ballistics.gun", "qualname": "Gun.shot_mass", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.charge", "modulename": "ballistics.gun", "qualname": "Gun.charge", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[ballistics.charge.Charge]"}, {"fullname": "ballistics.gun.Gun.charges", "modulename": "ballistics.gun", "qualname": "Gun.charges", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[ballistics.charge.Charge, ...] | list[ballistics.charge.Charge]"}, {"fullname": "ballistics.gun.Gun.charge_mass", "modulename": "ballistics.gun", "qualname": "Gun.charge_mass", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]"}, {"fullname": "ballistics.gun.Gun.charge_masses", "modulename": "ballistics.gun", "qualname": "Gun.charge_masses", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[float, ...] | list[float]"}, {"fullname": "ballistics.gun.Gun.chamber_volume", "modulename": "ballistics.gun", "qualname": "Gun.chamber_volume", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.loss_fraction", "modulename": "ballistics.gun", "qualname": "Gun.loss_fraction", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.start_pressure", "modulename": "ballistics.gun", "qualname": "Gun.start_pressure", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.travel", "modulename": "ballistics.gun", "qualname": "Gun.travel", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.to_json", "modulename": "ballistics.gun", "qualname": "Gun.to_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.from_json", "modulename": "ballistics.gun", "qualname": "Gun.from_json", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">json_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.to_file", "modulename": "ballistics.gun", "qualname": "Gun.to_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">guns</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.from_file", "modulename": "ballistics.gun", "qualname": "Gun.from_file", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.l_0", "modulename": "ballistics.gun", "qualname": "Gun.l_0", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.S", "modulename": "ballistics.gun", "qualname": "Gun.S", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.charge_mass_sum", "modulename": "ballistics.gun", "qualname": "Gun.charge_mass_sum", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "ballistics.gun.Gun.delta", "modulename": "ballistics.gun", "qualname": "Gun.delta", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.charge_volume", "modulename": "ballistics.gun", "qualname": "Gun.charge_volume", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.phi", "modulename": "ballistics.gun", "qualname": "Gun.phi", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.bomb_free_fraction", "modulename": "ballistics.gun", "qualname": "Gun.bomb_free_fraction", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.theta", "modulename": "ballistics.gun", "qualname": "Gun.theta", "kind": "variable", "doc": "<p>The mixed gas's adiabatic index is assumed to equal that of the primary charge.</p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.velocity_limit", "modulename": "ballistics.gun", "qualname": "Gun.velocity_limit", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.gun.Gun.get_thermal_efficiency", "modulename": "ballistics.gun", "qualname": "Gun.get_thermal_efficiency", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">velocity</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.get_ballistic_efficiency", "modulename": "ballistics.gun", "qualname": "Gun.get_ballistic_efficiency", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">velocity</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.get_piezoelectric_efficiency", "modulename": "ballistics.gun", "qualname": "Gun.get_piezoelectric_efficiency", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">velocity</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">peak_average_pressure</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.get_bomb_state", "modulename": "ballistics.gun", "qualname": "Gun.get_bomb_state", "kind": "function", "doc": "<p>Generate a special state that corresponds to the case where the gun is operated\nas a ballistic bomb, and where all propellants has fully combusted. This\n<code>ballistic.state.State</code> is uniquely marked by a <code>ballistic.Significance.BOMB</code>\nmarker. This state's pressure values represents the maximum possible that can\nbe achieved under this loading condition regardless of powder combustion behavior.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.get_start_state", "modulename": "ballistics.gun", "qualname": "Gun.get_start_state", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">n_intg</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>, </span><span class=\"param\"><span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.gas_energy", "modulename": "ballistics.gun", "qualname": "Gun.gas_energy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">psis</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">v</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.incompressible_fraction", "modulename": "ballistics.gun", "qualname": "Gun.incompressible_fraction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">psis</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.dt", "modulename": "ballistics.gun", "qualname": "Gun.dt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateVector</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.dl", "modulename": "ballistics.gun", "qualname": "Gun.dl", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateVector</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.dv", "modulename": "ballistics.gun", "qualname": "Gun.dv", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateVector</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.propagate_rk4_in_time", "modulename": "ballistics.gun", "qualname": "Gun.propagate_rk4_in_time", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>,</span><span class=\"param\">\t<span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">marker</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">Significance</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Significance</span><span class=\"o\">.</span><span class=\"n\">STEP</span><span class=\"p\">:</span> <span class=\"s1\">&#39;...&#39;</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.propagate_rk4_in_travel", "modulename": "ballistics.gun", "qualname": "Gun.propagate_rk4_in_travel", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>,</span><span class=\"param\">\t<span class=\"n\">dl</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">marker</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">Significance</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Significance</span><span class=\"o\">.</span><span class=\"n\">STEP</span><span class=\"p\">:</span> <span class=\"s1\">&#39;...&#39;</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.propagate_rk4_in_velocity", "modulename": "ballistics.gun", "qualname": "Gun.propagate_rk4_in_velocity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>,</span><span class=\"param\">\t<span class=\"n\">dv</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">marker</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">Significance</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">Significance</span><span class=\"o\">.</span><span class=\"n\">STEP</span><span class=\"p\">:</span> <span class=\"s1\">&#39;...&#39;</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.propagate_rk4", "modulename": "ballistics.gun", "qualname": "Gun.propagate_rk4", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>,</span><span class=\"param\">\t<span class=\"n\">s_i</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateVector</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">Significance</span><span class=\"p\">],</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">df</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">],</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateVector</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">dx</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">marker</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">Significance</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.to_start", "modulename": "ballistics.gun", "qualname": "Gun.to_start", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">n_intg</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateList</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.get_velocity_post_burnout", "modulename": "ballistics.gun", "qualname": "Gun.get_velocity_post_burnout", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">burnout_state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>, </span><span class=\"param\"><span class=\"n\">travel</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.get_travel_post_burnout", "modulename": "ballistics.gun", "qualname": "Gun.get_travel_post_burnout", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">burnout_state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>, </span><span class=\"param\"><span class=\"n\">velocity</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.to_burnout", "modulename": "ballistics.gun", "qualname": "Gun.to_burnout", "kind": "function", "doc": "<p>Integrates projectile motion up to the propellant burnout point and returns\na List of State.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>n_intg</strong> (int):\nminimum number of integration steps that is to be taken from shot start\nto charge burnout.</li>\n<li><strong>acc</strong> (float):\nrelative accuracy characteristic points (burnout and peak) will be\ndetermined to in relation to the process's total time. Also controls\nthe accuracy to which initial burnup is solved to.</li>\n<li><strong>abort_travel, abort_velocity</strong> (float):\nadditional criterias to abort the calculation before burnout point is\nreached.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of <code>ballistics.state.State</code>.</strong></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Implementation wise, the adaptive stepsize is first seeded with a\nvalue from module wide constant <code>ballistics.MAX_DT</code>, integrated until\npost burnout, or after the abort conditionals (travel or velocity) have been\nexceeded. The total time of which is used as a better approximate to\ntime-to-burnout (or abort), divided by <code>n_intg</code> as the step size for the next run.\nThis is repeated until at least <code>n_intg</code> steps were taken (including the\ninitial step, and the post-burnout/abort step).</p>\n\n<p>In the burnout case, the last two steps brackets the actual burnout point,\nfrom which <code>ballistics.num.dekker</code> is called to numerically find the burnout\npoint to an accuracy of <code>acc</code> times the approximate total time.</p>\n\n<p>In the abort case, the last step is dropped such that the returned\n<code>ballistics.state.StateList</code> does not contain any point that exceeds the abort\ncriteria, whether travel or velocity.</p>\n\n<p>In either case, the result is passed through <code>Gun.mark_max_pressure</code> to mark\nthe peak pressure point.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">n_intg</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">abort_velocity</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">abort_travel</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">logging_preamble</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateList</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.to_travel", "modulename": "ballistics.gun", "qualname": "Gun.to_travel", "kind": "function", "doc": "<p>Conducts integration up to the desired shot-travel using time-wise ODE, if\nthe travel is greater than burnout point. Then, length-wise ODE is used\nto single-step to the specified travel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>travel</strong> (float):\nthe projectile travel to which the integration is done to.</li>\n<li><strong>n_intg, acc</strong> (int, float):\nsee documentation for <code>Gun.to_burnout</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of <code>ballistics.state.State</code>.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">travel</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_intg</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">logging_preamble</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateList</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.gun.Gun.mark_max_pressure", "modulename": "ballistics.gun", "qualname": "Gun.mark_max_pressure", "kind": "function", "doc": "<p>Finds the maximum pressure point and insert it into a list of\n<code>ballistics.state.State</code>, passed in as argument.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Implementation wise, conducts a gold-section search using <code>ballistics.num.gss_max</code>\nin the interval bracketed by the step before and after the step where maximum\npressure is recorded. By intercepting the accuracy specification passed to the\ngenerating functions, the peak-pressure point is determined to (at worst) step size\ntimes <code>acc</code>.</p>\n\n<p>If a previous round of peak pressure finding is recognized (by the presence\nof the <code>ballistics.Significance.PEAK_PRPESSURE</code> marker).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">states</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateList</span>,</span><span class=\"param\">\t<span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">logging_preamble</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateList</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.num", "modulename": "ballistics.num", "kind": "module", "doc": "<p>A collection of useful numerical routines used here.</p>\n"}, {"fullname": "ballistics.num.dekker", "modulename": "ballistics.num.dekker", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.num.dekker.dekker", "modulename": "ballistics.num.dekker", "qualname": "dekker", "kind": "function", "doc": "<p>Dekker algorithm for finding the root of a univariate function on a bracketing\ninterval. Returns the best estimate and its counterpoint.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>f</strong> (Callable[[float], float]):\nunivariate function defined on [min(<code>x_0</code>, <code>x_1</code>), max(<code>x_0</code>, <code>x_1</code>)].</li>\n<li><strong>x_0, x_1</strong> (float):\ninterval of the root. must <em>strictly</em> brackets the root.</li>\n<li><strong>tol:</strong>: convergence criteria, maximum accepted difference between estimate and its\ncounterpoint.</li>\n<li><strong>max_it:</strong>: terminating condition, maximum number of iterations before calculation is aborted.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>x_best, x_bracketing</strong> (float):\nthe current best estimate and its counterpoint.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: if the supplied interval does not bracket the root.</li>\n<li><strong>ValueError</strong>: if the maximum iteration has been exceeded.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This is a hybrid root finding algorithm that combines the bisection and secant method.\nOn every iteration, both methods are called to generate the next estimate of the\nroot, accepting the secant estimate when it is strictly between current best estimate\nand mid-point estimate. If this results in a sign change, the contrapoint is updated\nwith the previous best estimate.</p>\n\n<p>This allows faster convergence when functions are well behaved, but if successive\nsecant branches are taken, the convergence can be poorer than simple bisection.</p>\n\n<h6 id=\"references\">References</h6>\n\n<ul>\n<li><strong>[1]</strong> Dekker, T. J. (1969), \"Finding a zero by means of successive linear\ninterpolation\", in Dejon, B.; Henrici, P. (eds.), Constructive Aspects of the\nFundamental Theorem of Algebra, London: Wiley-Interscience, ISBN 978-0-471-20300-1</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">x_0</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x_1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">max_it</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">33</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.num.gss", "modulename": "ballistics.num.gss", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.num.gss.gss_min", "modulename": "ballistics.num.gss", "qualname": "gss_min", "kind": "function", "doc": "<p>Calls <code>_gss</code> with boolean flag set to false. See <code>_gss</code> for documentation</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">x_0</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x_1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">max_it</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">33</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.num.gss.gss_max", "modulename": "ballistics.num.gss", "qualname": "gss_max", "kind": "function", "doc": "<p>Calls <code>_gss</code> with boolean flag set to false. See <code>_gss</code> for documentation</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">x_0</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x_1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">max_it</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">33</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.num.intg", "modulename": "ballistics.num.intg", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.num.intg.intg", "modulename": "ballistics.num.intg", "qualname": "intg", "kind": "function", "doc": "<p>Performs numerical integration of a single-variate function, a.la the HP-34C.\nReturns both the integral and an error estimation.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>f</strong> (Callable[[float], float]):\nsingle variate function to be integrated.</li>\n<li><strong>l, u</strong> (float):\nlower and upper bound of integration.</li>\n<li><strong>tol</strong> (float):\nconvergence criteria, tolerance of the integral.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>integral, error</strong> (float):\nthe computed integral, and an estimation of the error</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>To apply the quadrature procedure, first the problem is transformed on interval to:</p>\n\n<pre><code>u              1                        given:\n\u222b f(x) dx -&gt; a \u222b f(ax+b) dx             a = (u - l) / 2\nl             -1                        b = (u + l) / 2\n</code></pre>\n\n<p>another transformation on the variable of integration eliminates the need to sample\nat either end points, which makes it possible to evaluate improper integrals if the\nasymptotes is at either end point.</p>\n\n<pre><code>1                                        1\n\u222b f(u) du -- let u = 1.5v-0.5v**3 -&gt; 1.5 \u222b f(1.5v-0.5v^3)*(1-v^2) dv\n-1                                      -1\n</code></pre>\n\n<p>as the weight (1-v^2) is exactly 0 on both end points. We then sample evenly along\nv, take quadrature using the mid-point rule and doubling the number of nodes taken\nfor each pass. This helps with suppressing harmonics if the function integrated is\nperiodic. In addition, all of the previously calcualted quadratures can be reused\nin the next round, after dividing by half. This is especially important when funct-\nion calls are expensive. Specifically, for pass k (k>=1 &amp; integer) we consider 2^k-1\npoints (besides the end points):</p>\n\n<pre><code>v(i) = -1 + 2^(1-k) * i as i increments from 1 to 2^k-1 (inclusive).\n\n                               2^k-1\nlet I(k) =  2^(1-k) * 1.5 * a * \u03a3 f(1.5v-0.5v^3)*(1-v^2)\n                               i=1\n\n                                 2^k+1\nthen I(k+1) = 2^(-k) * 1.5 * a * \u03a3 f(1.5v-0.5v^3)*(1-v^2) for every odd i + I(k)/2\n                                 i=1\n</code></pre>\n\n<p>as a rough approximation, the error is simply taken to be the change in estimated value\nbetween two successive evaluations:</p>\n\n<pre><code>\u0394I(k) = I(k) - I(k-1)\n</code></pre>\n\n<p>if the quadrature procedure results in a converging result, then the error should dec-\nrease faster than the increment in the result, speaking in absolute terms. Although\nthis is no-way guaranteed, it is convenient to take the increment as an upper bound\non error. Therefore we check for three consecutive increments smaller than the specified\ntolerance before submitting the result as a good enough estimate for the integral.</p>\n\n<p>Since specifying a relative error does not work well for values extremely close to 0.\nInstead we define a error as abs(x_true - x_ref) / (tolerance + abs(x_ref)) x 100%</p>\n\n<h6 id=\"references\">References</h6>\n\n<ul>\n<li><strong>[1]</strong> \"Handheld Calculator Evaluates Integrals\", William M.Kahan, Hewlett Packard\nJournal, August 1980 Volume 31, number 8.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">l</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">u</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.num.secant", "modulename": "ballistics.num.secant", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.num.secant.secant", "modulename": "ballistics.num.secant", "qualname": "secant", "kind": "function", "doc": "<p>use secant method to solve the zero of a univariate function.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>f</strong> (Callable[[float], float]):\nunivariate function defined on (at least) [x_min, x_max].</li>\n<li><strong>x_0, x_1</strong> (float):\ntwo initial guesses to seed the secant algorithm.</li>\n<li><strong>x_min, x_max</strong> (float):\nbounds on which the root is to be found. Default values\n[-inf, +inf].</li>\n<li><strong>tol</strong> (float):\nconvergence criteria. The algorithm will terminate when the solution for the\nroot does not vary more than abs(<code>tol</code>) in any single iteration.</li>\n<li><strong>max_it</strong> (int):\nterminating condition, maximum number of iterations before the calculation\nis aborted.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValuError</strong>: if the maximum number of iteration is exceeded.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>x_2, x_1</strong> (float):\nsolution of successive iteration that satisifies |<code>x_2</code> - <code>x_1</code>| &lt; abs(<code>tol</code>).</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The secant method allows faster convergence on well behaved functions,\nbut does not guarantee convergence to a root. it is incumbent upon\nthe user to check that the algorithm did not converge to one of the bounds\n(<code>x_min</code>, <code>x_max</code>) even when the algorithm terminates without error.</p>\n\n<p>When an error is raised, there are a few possibilities:</p>\n\n<ul>\n<li>the function does not have a root on [x_min, x_max], in which case the solution\nwill \"jump\" around a stationary point without converging.</li>\n<li>the function may not be well behaved in proximity to the root.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">x_0</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x_1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">tol</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">x_min</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">x_max</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">max_it</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem", "modulename": "ballistics.problem", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.problem.base_problem", "modulename": "ballistics.problem.base_problem", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.problem.base_problem.logger", "modulename": "ballistics.problem.base_problem", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger ballistics.problem.base_problem (WARNING)&gt;"}, {"fullname": "ballistics.problem.base_problem.BaseProblem", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.__init__", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.__init__", "kind": "function", "doc": "<p>Method generated by attrs for class BaseProblem.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">family</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">propellant</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Propellant</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">propellants</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Propellant</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">charge</span><span class=\"o\">.</span><span class=\"n\">Propellant</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">form_function</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">form_function</span><span class=\"o\">.</span><span class=\"n\">FormFunction</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">form_functions</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">form_function</span><span class=\"o\">.</span><span class=\"n\">FormFunction</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">form_function</span><span class=\"o\">.</span><span class=\"n\">FormFunction</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">cross_section</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">shot_mass</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">travel</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">loss_fraction</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">start_pressure</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">30000000.0</span></span>)</span>"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.name", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.description", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.description", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.family", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.family", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.propellant", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.propellant", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[ballistics.charge.Propellant]"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.propellants", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.propellants", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[ballistics.charge.Propellant] | tuple[ballistics.charge.Propellant, ...]"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.form_function", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.form_function", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[ballistics.form_function.FormFunction]"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.form_functions", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.form_functions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[ballistics.form_function.FormFunction] | tuple[ballistics.form_function.FormFunction, ...]"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.cross_section", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.cross_section", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.shot_mass", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.shot_mass", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.travel", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.travel", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.loss_fraction", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.loss_fraction", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.start_pressure", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.start_pressure", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.get_gun", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.get_gun", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">chamber_volume</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">charge_mass</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">charge_masses</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrate</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrates</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.base_problem.BaseProblem.get_gun_developing_pressure", "modulename": "ballistics.problem.base_problem", "qualname": "BaseProblem.get_gun_developing_pressure", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">pressure_target</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">pressure_target</span><span class=\"o\">.</span><span class=\"n\">PressureTarget</span>,</span><span class=\"param\">\t<span class=\"n\">chamber_volume</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">charge_mass</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">charge_masses</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrate_ratios</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_intg</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">logging_preamble</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.fixed_charge_problem", "modulename": "ballistics.problem.fixed_charge_problem", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.problem.fixed_charge_problem.logger", "modulename": "ballistics.problem.fixed_charge_problem", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger ballistics.problem.fixed_charge_problem (WARNING)&gt;"}, {"fullname": "ballistics.problem.fixed_charge_problem.FixedChargeProblem", "modulename": "ballistics.problem.fixed_charge_problem", "qualname": "FixedChargeProblem", "kind": "class", "doc": "<p></p>\n", "bases": "ballistics.problem.base_problem.BaseProblem"}, {"fullname": "ballistics.problem.fixed_charge_problem.FixedChargeProblem.__init__", "modulename": "ballistics.problem.fixed_charge_problem", "qualname": "FixedChargeProblem.__init__", "kind": "function", "doc": "<p>Method generated by attrs for class FixedChargeProblem.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">family</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">propellant</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Optional[Propellant]&#39;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">propellants</span><span class=\"p\">:</span> <span class=\"s1\">&#39;list[Propellant] | tuple[Propellant, ...]&#39;</span> <span class=\"o\">=</span> <span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">form_function</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Optional[FormFunction]&#39;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">form_functions</span><span class=\"p\">:</span> <span class=\"s1\">&#39;list[FormFunction] | tuple[FormFunction, ...]&#39;</span> <span class=\"o\">=</span> <span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">cross_section</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">shot_mass</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">travel</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">loss_fraction</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">start_pressure</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">30000000.0</span>,</span><span class=\"param\">\t<span class=\"n\">charge_mass</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">charge_masses</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">()</span></span>)</span>"}, {"fullname": "ballistics.problem.fixed_charge_problem.FixedChargeProblem.charge_mass", "modulename": "ballistics.problem.fixed_charge_problem", "qualname": "FixedChargeProblem.charge_mass", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]"}, {"fullname": "ballistics.problem.fixed_charge_problem.FixedChargeProblem.charge_masses", "modulename": "ballistics.problem.fixed_charge_problem", "qualname": "FixedChargeProblem.charge_masses", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[float] | tuple[float, ...]"}, {"fullname": "ballistics.problem.fixed_charge_problem.FixedChargeProblem.get_gun", "modulename": "ballistics.problem.fixed_charge_problem", "qualname": "FixedChargeProblem.get_gun", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">chamber_volume</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrate</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrates</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.fixed_charge_problem.FixedChargeProblem.chamber_min_volume", "modulename": "ballistics.problem.fixed_charge_problem", "qualname": "FixedChargeProblem.chamber_min_volume", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.problem.fixed_charge_problem.FixedChargeProblem.get_chamber_volume_limits", "modulename": "ballistics.problem.fixed_charge_problem", "qualname": "FixedChargeProblem.get_chamber_volume_limits", "kind": "function", "doc": "<p>find the range of valid chamber volume</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pressure_target, acc</strong> (<code>ballistics.problem.pressure_target.PressureTarget</code>, float):\nsee <code>ballistics.problem.base_problem.BaseProblem.get_gun_developing_pressure</code>\nfor more information.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>lower_limit, upper_limit</strong> (float):</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The upper limit is determined to ensure minimum free fraction for the bomb case.</p>\n\n<p>The lower limit is such that the pressure specification may be achieved in the\nbomb case. Choice of the more conservative solution ensures valid (finite) burn\nrate if it were to be used.</p>\n\n<p>For more explanation of the rationale, reference\n<code>ballistics.problem.fixed_volume_problem.FixedVolumeProblem.get_charge_mass_limits</code>.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">pressure_target</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">pressure_target</span><span class=\"o\">.</span><span class=\"n\">PressureTarget</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">logging_preamble</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.fixed_charge_problem.FixedChargeProblem.solve_reduced_burn_rate_for_volume_at_pressure", "modulename": "ballistics.problem.fixed_charge_problem", "qualname": "FixedChargeProblem.solve_reduced_burn_rate_for_volume_at_pressure", "kind": "function", "doc": "<p>solves the reduced burn rate such that the peak pressure developed in bore\nmatches the desired value. This is the outer, user facing function that validates\nthe input by checking against the calculated chamber volume limits. Implementation\nis instead under <code>ballistics.problem.base_problem.BaseProblem.get_gun_developing_pressure</code>\nmethod.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>chamber_volume</strong> (float):\nvolume of the chamber.</li>\n<li><strong>pressure_target</strong> (float, <code>ballistics.problem.pressure_target.PressureTarget</code>):\nthe pressure to target, along with its point-of-measurement.</li>\n<li><strong>n_intg, acc</strong> (int, float):\nparameter passed to <code>ballistics.gun.MonoChargeGun.to_burnout</code>. In addition, <code>acc</code>\nspecifies the relative accuracy to which the reduced burn-rate is solved to,\nusing an iterative procedure.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: if the specified charge mass is either too low or too high for this\ngun design.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>gun</strong> (<code>ballistics.gun.MonoChargeGun</code> object):\nthe gun corresponding to this solution.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">chamber_volume</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">pressure_target</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">pressure_target</span><span class=\"o\">.</span><span class=\"n\">PressureTarget</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrate_ratios</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_intg</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">logging_preamble</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.fixed_charge_problem.FixedChargeProblem.solve_chamber_volume_at_pressure_for_velocity", "modulename": "ballistics.problem.fixed_charge_problem", "qualname": "FixedChargeProblem.solve_chamber_volume_at_pressure_for_velocity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">pressure_target</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">pressure_target</span><span class=\"o\">.</span><span class=\"n\">PressureTarget</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrate_ratios</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">velocity_target</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_intg</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">logging_preamble</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.fixed_volume_problem", "modulename": "ballistics.problem.fixed_volume_problem", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.problem.fixed_volume_problem.logger", "modulename": "ballistics.problem.fixed_volume_problem", "qualname": "logger", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Logger ballistics.problem.fixed_volume_problem (WARNING)&gt;"}, {"fullname": "ballistics.problem.fixed_volume_problem.FixedVolumeProblem", "modulename": "ballistics.problem.fixed_volume_problem", "qualname": "FixedVolumeProblem", "kind": "class", "doc": "<p>Given known gun and charge loading parameters, deduce the charge that is required to <em>match</em>\nthe performance, in terms of peak pressure and shot velocity.</p>\n", "bases": "ballistics.problem.base_problem.BaseProblem"}, {"fullname": "ballistics.problem.fixed_volume_problem.FixedVolumeProblem.__init__", "modulename": "ballistics.problem.fixed_volume_problem", "qualname": "FixedVolumeProblem.__init__", "kind": "function", "doc": "<p>Method generated by attrs for class FixedVolumeProblem.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">family</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">propellant</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Optional[Propellant]&#39;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">propellants</span><span class=\"p\">:</span> <span class=\"s1\">&#39;list[Propellant] | tuple[Propellant, ...]&#39;</span> <span class=\"o\">=</span> <span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">form_function</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Optional[FormFunction]&#39;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">form_functions</span><span class=\"p\">:</span> <span class=\"s1\">&#39;list[FormFunction] | tuple[FormFunction, ...]&#39;</span> <span class=\"o\">=</span> <span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">cross_section</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">shot_mass</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">travel</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">loss_fraction</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">start_pressure</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">30000000.0</span>,</span><span class=\"param\">\t<span class=\"n\">chamber_volume</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span>)</span>"}, {"fullname": "ballistics.problem.fixed_volume_problem.FixedVolumeProblem.chamber_volume", "modulename": "ballistics.problem.fixed_volume_problem", "qualname": "FixedVolumeProblem.chamber_volume", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.problem.fixed_volume_problem.FixedVolumeProblem.get_gun", "modulename": "ballistics.problem.fixed_volume_problem", "qualname": "FixedVolumeProblem.get_gun", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">charge_mass</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">charge_masses</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrate</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrates</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.fixed_volume_problem.FixedVolumeProblem.get_fill_mass", "modulename": "ballistics.problem.fixed_volume_problem", "qualname": "FixedVolumeProblem.get_fill_mass", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">charge_mass_ratios</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.fixed_volume_problem.FixedVolumeProblem.get_charge_mass_limits", "modulename": "ballistics.problem.fixed_volume_problem", "qualname": "FixedVolumeProblem.get_charge_mass_limits", "kind": "function", "doc": "<p>Find the maximum and minimum valid charge mass value for the outlined gun design</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pressure_target, acc</strong> (<code>ballistics.problem.pressure_target.PressureTarget</code>, float):\nsee <code>ballistics.problem.base_problem.BaseProblem.get_gun_developing_pressure</code>\nfor more information.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>lower_limit, upper_limit</strong> (float):</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The bomb-pressure refers to the pressure developed in a gun as its charges\nhave completelly burnt, before the projectile has moved. This corresponds\nto the case where the reduced burn-rate is infinitesimally high. It has the\nconvenient property that it is the maximum pressure that can be developed with\na certain charge loading.</p>\n\n<p>The lower limit is found by finding the required mass of charge to bring the\ngun's bomb-pressure to at least the targeted pressure levels.</p>\n\n<p>The upper limit is found when the complete combustion of charge within\nchamber reduces volumetric free fraction to less than <code>acc</code>, since the Nobel-Abel\nequation of state does not model high pressure (and correspondingly\nhigh incompressibility) well.</p>\n\n<p>The reduced-burn rate that corresponds to the limiting charge\nweights asymptotically approaches <code>+inf</code> for the lower limit, and 0 for the\nupper limit. Care is taken such that the returned limits, being numerically\nsolved, errs on the conservative side.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">pressure_target</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">pressure_target</span><span class=\"o\">.</span><span class=\"n\">PressureTarget</span>,</span><span class=\"param\">\t<span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">charge_mass_ratios</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">logging_preamble</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.fixed_volume_problem.FixedVolumeProblem.solve_reduced_burn_rate_for_charge_at_pressure", "modulename": "ballistics.problem.fixed_volume_problem", "qualname": "FixedVolumeProblem.solve_reduced_burn_rate_for_charge_at_pressure", "kind": "function", "doc": "<p>solves the reduced burn rate such that the peak pressure developed in bore\nmatches the desired value. This is the outer, user facing function that validates\nthe input by checking against the calcualted charge mass limits. Implementation\ninstead under <code>ballistics.problem.base_problem.BaseProblem.get_gun_developing_pressure</code>\nmethod.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>charge_mass</strong> (float):\nthe mass of the charge.</li>\n<li><strong>pressure_target</strong> (float, <code>ballistics.problem.pressure_target.PressureTarget</code>):\nthe pressure to target, along with its point-of-measurement.</li>\n<li><strong>n_intg, acc</strong> (int, float):\nparameter passed to <code>ballistics.gun.Gun.to_burnout</code>. In addition, <code>acc</code>\nspecifies the relative accuracy to which the reduced burn-rate is solved to,\nusing an iterative procedure.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: if the specified charge mass is either too low or too high for this\ngun design.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>gun</strong> (<code>ballistics.gun.Gun</code> object):\nthe gun corresponding to this solution.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">pressure_target</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">pressure_target</span><span class=\"o\">.</span><span class=\"n\">PressureTarget</span>,</span><span class=\"param\">\t<span class=\"n\">charge_mass</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">charge_masses</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrate_ratios</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_intg</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">logging_preamble</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.fixed_volume_problem.FixedVolumeProblem.solve_charge_mass_at_pressure_for_velocity", "modulename": "ballistics.problem.fixed_volume_problem", "qualname": "FixedVolumeProblem.solve_charge_mass_at_pressure_for_velocity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">pressure_target</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">pressure_target</span><span class=\"o\">.</span><span class=\"n\">PressureTarget</span>,</span><span class=\"param\">\t<span class=\"n\">charge_mass_ratios</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">velocity_target</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_intg</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">logging_preamble</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.known_gun_problem", "modulename": "ballistics.problem.known_gun_problem", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.problem.known_gun_problem.KnownGunProblem", "modulename": "ballistics.problem.known_gun_problem", "qualname": "KnownGunProblem", "kind": "class", "doc": "<p></p>\n", "bases": "ballistics.problem.base_problem.BaseProblem"}, {"fullname": "ballistics.problem.known_gun_problem.KnownGunProblem.__init__", "modulename": "ballistics.problem.known_gun_problem", "qualname": "KnownGunProblem.__init__", "kind": "function", "doc": "<p>Method generated by attrs for class KnownGunProblem.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">family</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">propellant</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Optional[Propellant]&#39;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">propellants</span><span class=\"p\">:</span> <span class=\"s1\">&#39;list[Propellant] | tuple[Propellant, ...]&#39;</span> <span class=\"o\">=</span> <span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">form_function</span><span class=\"p\">:</span> <span class=\"s1\">&#39;Optional[FormFunction]&#39;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">form_functions</span><span class=\"p\">:</span> <span class=\"s1\">&#39;list[FormFunction] | tuple[FormFunction, ...]&#39;</span> <span class=\"o\">=</span> <span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">cross_section</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">shot_mass</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">travel</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">loss_fraction</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">start_pressure</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">30000000.0</span>,</span><span class=\"param\">\t<span class=\"n\">chamber_volume</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">charge_mass</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">charge_masses</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">()</span></span>)</span>"}, {"fullname": "ballistics.problem.known_gun_problem.KnownGunProblem.chamber_volume", "modulename": "ballistics.problem.known_gun_problem", "qualname": "KnownGunProblem.chamber_volume", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.problem.known_gun_problem.KnownGunProblem.charge_mass", "modulename": "ballistics.problem.known_gun_problem", "qualname": "KnownGunProblem.charge_mass", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]"}, {"fullname": "ballistics.problem.known_gun_problem.KnownGunProblem.charge_masses", "modulename": "ballistics.problem.known_gun_problem", "qualname": "KnownGunProblem.charge_masses", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[float] | tuple[float, ...]"}, {"fullname": "ballistics.problem.known_gun_problem.KnownGunProblem.get_gun", "modulename": "ballistics.problem.known_gun_problem", "qualname": "KnownGunProblem.get_gun", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrate</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrates</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.known_gun_problem.KnownGunProblem.get_gun_developing_pressure", "modulename": "ballistics.problem.known_gun_problem", "qualname": "KnownGunProblem.get_gun_developing_pressure", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">pressure_target</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">problem</span><span class=\"o\">.</span><span class=\"n\">pressure_target</span><span class=\"o\">.</span><span class=\"n\">PressureTarget</span>,</span><span class=\"param\">\t<span class=\"n\">reduced_burnrate_ratios</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_intg</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">acc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">logging_preamble</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.pressure_target", "modulename": "ballistics.problem.pressure_target", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget", "kind": "class", "doc": "<p>class representing pressure target, encompassing both the numeric pressure value, as\nwell as the location it is measured/specified as.</p>\n\n<p>Use of one of the three classmethods:\n<code>PressureTarget.breech_pressure</code>, <code>PressureTarget.average_pressure</code>,\n<code>PressureTarget.shot_pressure</code>, instead of manually specifying the various pressure points\nis strongly advised.</p>\n"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget.__init__", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget.__init__", "kind": "function", "doc": "<p>Method generated by attrs for class PressureTarget.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"o\">*</span>, </span><span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget.value", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget.value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget.target", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget.target", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget.BREECH", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget.BREECH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;breech_pressure&#x27;"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget.AVERAGE", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget.AVERAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;average_pressure&#x27;"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget.SHOT", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget.SHOT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;shot_pressure&#x27;"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget.breech_pressure", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget.breech_pressure", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget.average_pressure", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget.average_pressure", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget.shot_pressure", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget.shot_pressure", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget.retrieve_from", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget.retrieve_from", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget.get_difference", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget.get_difference", "kind": "function", "doc": "<p>equivalent to <code>pt.retrieve_from(state) - pt.value</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.problem.pressure_target.PressureTarget.describe", "modulename": "ballistics.problem.pressure_target", "qualname": "PressureTarget.describe", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.state", "modulename": "ballistics.state", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "ballistics.state.State", "modulename": "ballistics.state", "qualname": "State", "kind": "class", "doc": "<p>class representing a particular point in the interior ballistic system\nof equations.</p>\n"}, {"fullname": "ballistics.state.State.__init__", "modulename": "ballistics.state", "qualname": "State.__init__", "kind": "function", "doc": "<p>Method generated by attrs for class State.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">gun</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">gun</span><span class=\"o\">.</span><span class=\"n\">Gun</span>,</span><span class=\"param\">\t<span class=\"n\">sv</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateVector</span>,</span><span class=\"param\">\t<span class=\"n\">marker</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">Significance</span>,</span><span class=\"param\">\t<span class=\"n\">is_started</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "ballistics.state.State.gun", "modulename": "ballistics.state", "qualname": "State.gun", "kind": "variable", "doc": "<p></p>\n", "annotation": ": ballistics.gun.Gun"}, {"fullname": "ballistics.state.State.sv", "modulename": "ballistics.state", "qualname": "State.sv", "kind": "variable", "doc": "<p></p>\n", "annotation": ": ballistics.state.StateVector"}, {"fullname": "ballistics.state.State.marker", "modulename": "ballistics.state", "qualname": "State.marker", "kind": "variable", "doc": "<p></p>\n", "annotation": ": ballistics.Significance"}, {"fullname": "ballistics.state.State.is_started", "modulename": "ballistics.state", "qualname": "State.is_started", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "ballistics.state.State.time", "modulename": "ballistics.state", "qualname": "State.time", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.State.travel", "modulename": "ballistics.state", "qualname": "State.travel", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.State.velocity", "modulename": "ballistics.state", "qualname": "State.velocity", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.State.burnup_fractions", "modulename": "ballistics.state", "qualname": "State.burnup_fractions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[float, ...]"}, {"fullname": "ballistics.state.State.remark", "modulename": "ballistics.state", "qualname": "State.remark", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">old_state</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>,</span><span class=\"param\">\t<span class=\"n\">new_significance</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">Significance</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.state.State.volume_burnup_fractions", "modulename": "ballistics.state", "qualname": "State.volume_burnup_fractions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[float, ...]"}, {"fullname": "ballistics.state.State.average_pressure", "modulename": "ballistics.state", "qualname": "State.average_pressure", "kind": "variable", "doc": "<p>the length-averaged pressure in the equivalent gun, under the Lagrange\ngradient of 0-dimensional interior ballistics.</p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The equivalent gun is a is formed by stretching the chamber volume of the\nactual gun into a section such that the gun is of uniform cross section\nthroughout. The error of this treatment is usually insignificant for the range\nof conditions encountered in conventional firearms (although it is of more\nconcern in light-gas guns).</p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.State.shot_pressure", "modulename": "ballistics.state", "qualname": "State.shot_pressure", "kind": "variable", "doc": "<p>the shot-base pressure in the equivalent gun. For more info refer to\n<code>average_pressure</code>.</p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.State.breech_pressure", "modulename": "ballistics.state", "qualname": "State.breech_pressure", "kind": "variable", "doc": "<p>the breech face pressure in the equivalent gun. For more info refer to\n<code>average_pressure</code>.</p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.State.is_burnout", "modulename": "ballistics.state", "qualname": "State.is_burnout", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool"}, {"fullname": "ballistics.state.State.increment_time", "modulename": "ballistics.state", "qualname": "State.increment_time", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateVector</span>,</span><span class=\"param\">\t<span class=\"n\">dt</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">marker</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">Significance</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.state.State.increment_travel", "modulename": "ballistics.state", "qualname": "State.increment_travel", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateVector</span>,</span><span class=\"param\">\t<span class=\"n\">dl</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">marker</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">Significance</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.state.State.increment_velocity", "modulename": "ballistics.state", "qualname": "State.increment_velocity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">StateVector</span>,</span><span class=\"param\">\t<span class=\"n\">dv</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">marker</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">Significance</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.state.StateVector", "modulename": "ballistics.state", "qualname": "StateVector", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "ballistics.state.StateVector.__init__", "modulename": "ballistics.state", "qualname": "StateVector.__init__", "kind": "function", "doc": "<p>Method generated by attrs for class StateVector.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">time</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">travel</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">velocity</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">burnup_fractions</span><span class=\"p\">:</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "ballistics.state.StateVector.time", "modulename": "ballistics.state", "qualname": "StateVector.time", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.StateVector.travel", "modulename": "ballistics.state", "qualname": "StateVector.travel", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.StateVector.velocity", "modulename": "ballistics.state", "qualname": "StateVector.velocity", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.StateVector.burnup_fractions", "modulename": "ballistics.state", "qualname": "StateVector.burnup_fractions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": tuple[float, ...]"}, {"fullname": "ballistics.state.StateList", "modulename": "ballistics.state", "qualname": "StateList", "kind": "class", "doc": "<p>A more or less complete user-defined wrapper around list objects.</p>\n", "bases": "collections.UserList[ballistics.state.State]"}, {"fullname": "ballistics.state.StateList.__init__", "modulename": "ballistics.state", "qualname": "StateList.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">seq</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "ballistics.state.StateList.get_state_by_marker", "modulename": "ballistics.state", "qualname": "StateList.get_state_by_marker", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">significance</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">Significance</span></span><span class=\"return-annotation\">) -> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">State</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.state.StateList.has_state_with_marker", "modulename": "ballistics.state", "qualname": "StateList.has_state_with_marker", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">significance</span><span class=\"p\">:</span> <span class=\"n\">ballistics</span><span class=\"o\">.</span><span class=\"n\">Significance</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "ballistics.state.StateList.muzzle_velocity", "modulename": "ballistics.state", "qualname": "StateList.muzzle_velocity", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.StateList.travel", "modulename": "ballistics.state", "qualname": "StateList.travel", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.StateList.burnout_point", "modulename": "ballistics.state", "qualname": "StateList.burnout_point", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.StateList.peak_shot_pressure", "modulename": "ballistics.state", "qualname": "StateList.peak_shot_pressure", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.StateList.peak_average_pressure", "modulename": "ballistics.state", "qualname": "StateList.peak_average_pressure", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "ballistics.state.StateList.tabulate", "modulename": "ballistics.state", "qualname": "StateList.tabulate", "kind": "function", "doc": "<p>Generates a plain, tabulated view of data for a list of\n<code>State</code> objects.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>states</strong> (list of <code>ballistics.state.State</code>):\nthe list of <code>ballistics.state.State</code> to be pretty-printed.</li>\n<li><strong>headers</strong> (tuple[str]):\nargument passed to <code>tabulate.tabulate()</code> to generate a header for the\ntable.</li>\n<li><strong><em>args, *</em>kwargs:</strong>: other positional and named arguments to be passed to <code>tabulate.tabulate()</code>,\nafter the aforementioned once, respectively.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: generated using <code>tabulate.tabulate()</code>.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>see documentation for <a href=\"https://pypi.org/project/tabulate/\">tabulate.tabulate</a>\nfor information on additional arguments.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">&#39;significance&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;time</span><span class=\"se\">\\n</span><span class=\"s1\">ms&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;travel</span><span class=\"se\">\\n</span><span class=\"s1\">m&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;velocity</span><span class=\"se\">\\n</span><span class=\"s1\">m/s&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;breech</span><span class=\"se\">\\n</span><span class=\"s1\">pressure</span><span class=\"se\">\\n</span><span class=\"s1\">MPa&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;average</span><span class=\"se\">\\n</span><span class=\"s1\">pressure</span><span class=\"se\">\\n</span><span class=\"s1\">MPa&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;shot</span><span class=\"se\">\\n</span><span class=\"s1\">pressure</span><span class=\"se\">\\n</span><span class=\"s1\">MPa&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;volume</span><span class=\"se\">\\n</span><span class=\"s1\">burnup</span><span class=\"se\">\\n</span><span class=\"s1\">fraction</span><span class=\"se\">\\n</span><span class=\"s1\">[charge 1]&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n\\n\\n</span><span class=\"s1\">[charge 2]&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\n\\n\\n</span><span class=\"s1\">[charge 3]&#39;</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">floatfmt</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.4g&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();